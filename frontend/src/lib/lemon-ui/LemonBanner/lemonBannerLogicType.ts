// Generated by kea-typegen on Thu, 20 Jul 2023 11:14:20 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { LemonBannerLogicProps } from './lemonBannerLogic'

export interface lemonBannerLogicType extends Logic {
    actionCreators: {
        dismiss: () => {
            type: 'dismiss (components.lemon-banner.lemonBannerLogic.*)'
            payload: {
                value: true
            }
        }
    }
    actionKeys: {
        'dismiss (components.lemon-banner.lemonBannerLogic.*)': 'dismiss'
    }
    actionTypes: {
        dismiss: 'dismiss (components.lemon-banner.lemonBannerLogic.*)'
    }
    actions: {
        dismiss: () => void
    }
    asyncActions: {
        dismiss: () => Promise<any>
    }
    defaults: {
        isDismissed: boolean
    }
    events: {}
    key: string
    listeners: {}
    path: ['components', 'lemon-banner', 'lemonBannerLogic', '*']
    pathString: 'components.lemon-banner.lemonBannerLogic.*'
    props: LemonBannerLogicProps
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        isDismissed: boolean
    }
    reducers: {
        isDismissed: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        isDismissed: boolean
    }
    selectors: {
        isDismissed: (state: any, props?: any) => boolean
    }
    sharedListeners: {}
    values: {
        isDismissed: boolean
    }
    _isKea: true
    _isKeaWithKey: true
}
