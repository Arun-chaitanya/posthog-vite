// Generated by kea-typegen on Thu, 20 Jul 2023 11:14:20 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

export interface helpButtonLogicType extends Logic {
    actionCreators: {
        reportHelpButtonViewed: () => {
            type: 'report help button viewed (lib.components.HelpButton.*)'
            payload: {
                value: true
            }
        }
        toggleHelp: () => {
            type: 'toggle help (lib.components.HelpButton.*)'
            payload: {
                value: true
            }
        }
        showHelp: () => {
            type: 'show help (lib.components.HelpButton.*)'
            payload: {
                value: true
            }
        }
        hideHelp: () => {
            type: 'hide help (lib.components.HelpButton.*)'
            payload: {
                value: true
            }
        }
    }
    actionKeys: {
        'report help button viewed (lib.components.HelpButton.*)': 'reportHelpButtonViewed'
        'toggle help (lib.components.HelpButton.*)': 'toggleHelp'
        'show help (lib.components.HelpButton.*)': 'showHelp'
        'hide help (lib.components.HelpButton.*)': 'hideHelp'
    }
    actionTypes: {
        reportHelpButtonViewed: 'report help button viewed (lib.components.HelpButton.*)'
        toggleHelp: 'toggle help (lib.components.HelpButton.*)'
        showHelp: 'show help (lib.components.HelpButton.*)'
        hideHelp: 'hide help (lib.components.HelpButton.*)'
    }
    actions: {
        reportHelpButtonViewed: () => void
        toggleHelp: () => void
        showHelp: () => void
        hideHelp: () => void
    }
    asyncActions: {
        reportHelpButtonViewed: () => Promise<any>
        toggleHelp: () => Promise<any>
        showHelp: () => Promise<any>
        hideHelp: () => Promise<any>
    }
    defaults: {
        isHelpVisible: boolean
    }
    events: {}
    key: string
    listeners: {
        showHelp: ((
            action: {
                type: 'show help (lib.components.HelpButton.*)'
                payload: {
                    value: true
                }
            },
            previousState: any
        ) => void | Promise<void>)[]
        toggleHelp: ((
            action: {
                type: 'toggle help (lib.components.HelpButton.*)'
                payload: {
                    value: true
                }
            },
            previousState: any
        ) => void | Promise<void>)[]
    }
    path: ['lib', 'components', 'HelpButton', '*']
    pathString: 'lib.components.HelpButton.*'
    props: {
        key?: string
    }
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        isHelpVisible: boolean
    }
    reducers: {
        isHelpVisible: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        isHelpVisible: boolean
    }
    selectors: {
        isHelpVisible: (state: any, props?: any) => boolean
    }
    sharedListeners: {}
    values: {
        isHelpVisible: boolean
    }
    _isKea: true
    _isKeaWithKey: true
}
