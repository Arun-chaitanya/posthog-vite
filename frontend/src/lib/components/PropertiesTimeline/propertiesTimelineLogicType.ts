// Generated by kea-typegen on Thu, 20 Jul 2023 11:19:51 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { PropertiesTimelinePoint, PropertiesTimelineProps, RawPropertiesTimelineResult } from './propertiesTimelineLogic'
import type { Properties } from '../../../../../node_modules/.pnpm/@posthog+plugin-scaffold@1.3.4/node_modules/@posthog/plugin-scaffold/dist/index.d'
import type { Dayjs } from '../../dayjs'

export interface propertiesTimelineLogicType extends Logic {
    actionCreators: {
        setSelectedPointIndex: (index: number | null) => {
            type: 'set selected point index (lib.components.PropertiesTimeline.propertiesTimelineLogic)'
            payload: {
                index: number | null
            }
        }
        loadResult: () => {
            type: 'load result (lib.components.PropertiesTimeline.propertiesTimelineLogic)'
            payload: any
        }
        loadResultSuccess: (
            result: RawPropertiesTimelineResult,
            payload?: any
        ) => {
            type: 'load result success (lib.components.PropertiesTimeline.propertiesTimelineLogic)'
            payload: {
                result: RawPropertiesTimelineResult
                payload?: any
            }
        }
        loadResultFailure: (
            error: string,
            errorObject?: any
        ) => {
            type: 'load result failure (lib.components.PropertiesTimeline.propertiesTimelineLogic)'
            payload: {
                error: string
                errorObject?: any
            }
        }
    }
    actionKeys: {
        'set selected point index (lib.components.PropertiesTimeline.propertiesTimelineLogic)': 'setSelectedPointIndex'
        'load result (lib.components.PropertiesTimeline.propertiesTimelineLogic)': 'loadResult'
        'load result success (lib.components.PropertiesTimeline.propertiesTimelineLogic)': 'loadResultSuccess'
        'load result failure (lib.components.PropertiesTimeline.propertiesTimelineLogic)': 'loadResultFailure'
    }
    actionTypes: {
        setSelectedPointIndex: 'set selected point index (lib.components.PropertiesTimeline.propertiesTimelineLogic)'
        loadResult: 'load result (lib.components.PropertiesTimeline.propertiesTimelineLogic)'
        loadResultSuccess: 'load result success (lib.components.PropertiesTimeline.propertiesTimelineLogic)'
        loadResultFailure: 'load result failure (lib.components.PropertiesTimeline.propertiesTimelineLogic)'
    }
    actions: {
        setSelectedPointIndex: (index: number | null) => void
        loadResult: () => void
        loadResultSuccess: (result: RawPropertiesTimelineResult, payload?: any) => void
        loadResultFailure: (error: string, errorObject?: any) => void
    }
    asyncActions: {
        setSelectedPointIndex: (index: number | null) => Promise<any>
        loadResult: () => Promise<any>
        loadResultSuccess: (result: RawPropertiesTimelineResult, payload?: any) => Promise<any>
        loadResultFailure: (error: string, errorObject?: any) => Promise<any>
    }
    defaults: {
        selectedPointIndex: number | null
        result: RawPropertiesTimelineResult | null
        resultLoading: boolean
    }
    events: {}
    key: string
    listeners: {}
    path: ['lib', 'components', 'PropertiesTimeline', 'propertiesTimelineLogic']
    pathString: 'lib.components.PropertiesTimeline.propertiesTimelineLogic'
    props: PropertiesTimelineProps
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        selectedPointIndex: number | null
        result: RawPropertiesTimelineResult | null
        resultLoading: boolean
    }
    reducers: {
        selectedPointIndex: (state: number | null, action: any, fullState: any) => number | null
        result: (
            state: RawPropertiesTimelineResult | null,
            action: any,
            fullState: any
        ) => RawPropertiesTimelineResult | null
        resultLoading: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        selectedPointIndex: number | null
        result: RawPropertiesTimelineResult | null
        resultLoading: boolean
    }
    selectors: {
        selectedPointIndex: (state: any, props?: any) => number | null
        result: (state: any, props?: any) => RawPropertiesTimelineResult | null
        resultLoading: (state: any, props?: any) => boolean
        currentTeamId: (state: any, props?: any) => number | null
        timezone: (state: any, props?: any) => string
        points: (state: any, props?: any) => PropertiesTimelinePoint[]
        crucialPropertyKeys: (state: any, props?: any) => (keyof Properties)[]
        dateRange: (state: any, props?: any) => [Dayjs, Dayjs] | null
    }
    sharedListeners: {}
    values: {
        selectedPointIndex: number | null
        result: RawPropertiesTimelineResult | null
        resultLoading: boolean
        currentTeamId: number | null
        timezone: string
        points: PropertiesTimelinePoint[]
        crucialPropertyKeys: (keyof Properties)[]
        dateRange: [Dayjs, Dayjs] | null
    }
    _isKea: true
    _isKeaWithKey: true
    __keaTypeGenInternalSelectorTypes: {
        points: (result: RawPropertiesTimelineResult | null, timezone: string) => PropertiesTimelinePoint[]
        crucialPropertyKeys: (result: RawPropertiesTimelineResult | null) => (keyof Properties)[]
        dateRange: (result: RawPropertiesTimelineResult | null, timezone: string) => [Dayjs, Dayjs] | null
    }
}
