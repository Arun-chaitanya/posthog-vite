// Generated by kea-typegen on Thu, 20 Jul 2023 10:54:59 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { FeatureFlagsSet } from './featureFlagLogic'

export interface featureFlagLogicType extends Logic {
    actionCreators: {
        setFeatureFlags: (
            flags: string[],
            variants: Record<string, string | boolean>
        ) => {
            type: 'set feature flags (lib.logic.featureFlagLogic)'
            payload: {
                flags: string[]
                variants: Record<string, string | boolean>
            }
        }
    }
    actionKeys: {
        'set feature flags (lib.logic.featureFlagLogic)': 'setFeatureFlags'
    }
    actionTypes: {
        setFeatureFlags: 'set feature flags (lib.logic.featureFlagLogic)'
    }
    actions: {
        setFeatureFlags: (flags: string[], variants: Record<string, string | boolean>) => void
    }
    asyncActions: {
        setFeatureFlags: (flags: string[], variants: Record<string, string | boolean>) => Promise<any>
    }
    defaults: {
        featureFlags: FeatureFlagsSet
        receivedFeatureFlags: boolean
    }
    events: {
        afterMount: () => void
    }
    key: undefined
    listeners: {}
    path: ['lib', 'logic', 'featureFlagLogic']
    pathString: 'lib.logic.featureFlagLogic'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        featureFlags: FeatureFlagsSet
        receivedFeatureFlags: boolean
    }
    reducers: {
        featureFlags: (state: FeatureFlagsSet, action: any, fullState: any) => FeatureFlagsSet
        receivedFeatureFlags: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        featureFlags: FeatureFlagsSet
        receivedFeatureFlags: boolean
    }
    selectors: {
        featureFlags: (state: any, props?: any) => FeatureFlagsSet
        receivedFeatureFlags: (state: any, props?: any) => boolean
    }
    sharedListeners: {}
    values: {
        featureFlags: FeatureFlagsSet
        receivedFeatureFlags: boolean
    }
    _isKea: true
    _isKeaWithKey: false
}
