// Generated by kea-typegen on Thu, 20 Jul 2023 11:18:05 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { InsightLogicProps } from '../../../types'
import type { InsightFilter } from '../../../queries/schema'

export interface valueOnSeriesFilterLogicType extends Logic {
    actionCreators: {
        updateInsightFilter: (insightFilter: InsightFilter) => {
            type: 'update insight filter (scenes.insights.EditorFilters.valueOnSeriesFilterLogic.*)'
            payload: {
                insightFilter: InsightFilter
            }
        }
        setValueOnSeries: (checked: boolean) => {
            type: 'set value on series (scenes.insights.EditorFilters.valueOnSeriesFilterLogic.*)'
            payload: {
                checked: boolean
            }
        }
    }
    actionKeys: {
        'update insight filter (scenes.insights.EditorFilters.valueOnSeriesFilterLogic.*)': 'updateInsightFilter'
        'set value on series (scenes.insights.EditorFilters.valueOnSeriesFilterLogic.*)': 'setValueOnSeries'
    }
    actionTypes: {
        updateInsightFilter: 'update insight filter (scenes.insights.EditorFilters.valueOnSeriesFilterLogic.*)'
        setValueOnSeries: 'set value on series (scenes.insights.EditorFilters.valueOnSeriesFilterLogic.*)'
    }
    actions: {
        updateInsightFilter: (insightFilter: InsightFilter) => void
        setValueOnSeries: (checked: boolean) => void
    }
    asyncActions: {
        updateInsightFilter: (insightFilter: InsightFilter) => Promise<any>
        setValueOnSeries: (checked: boolean) => Promise<any>
    }
    defaults: {}
    events: {}
    key: string
    listeners: {
        setValueOnSeries: ((
            action: {
                type: 'set value on series (scenes.insights.EditorFilters.valueOnSeriesFilterLogic.*)'
                payload: {
                    checked: boolean
                }
            },
            previousState: any
        ) => void | Promise<void>)[]
    }
    path: ['scenes', 'insights', 'EditorFilters', 'valueOnSeriesFilterLogic', '*']
    pathString: 'scenes.insights.EditorFilters.valueOnSeriesFilterLogic.*'
    props: InsightLogicProps
    reducer: (state: any, action: any, fullState: any) => {}
    reducers: {}
    selector: (state: any) => {}
    selectors: {
        isTrends: (state: any, props?: any) => boolean
        isStickiness: (state: any, props?: any) => boolean
        isLifecycle: (state: any, props?: any) => boolean
        insightFilter: (state: any, props?: any) => InsightFilter | null | undefined
        valueOnSeries: (state: any, props?: any) => boolean
    }
    sharedListeners: {}
    values: {
        isTrends: boolean
        isStickiness: boolean
        isLifecycle: boolean
        insightFilter: InsightFilter | null | undefined
        valueOnSeries: boolean
    }
    _isKea: true
    _isKeaWithKey: true
    __keaTypeGenInternalSelectorTypes: {
        valueOnSeries: (
            isTrends: boolean,
            isStickiness: boolean,
            isLifecycle: boolean,
            insightFilter:
                | import('/Users/arunchaitanya/Desktop/open-source/posthog-forked/posthog/frontend/src/queries/schema').InsightFilter
                | null
                | undefined
        ) => boolean
    }
}
