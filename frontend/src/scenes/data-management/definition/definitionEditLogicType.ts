// Generated by kea-typegen on Thu, 20 Jul 2023 11:26:41 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { DefinitionEditLogicProps } from './definitionEditLogic'
import type { DefinitionPageMode, SetDefinitionProps } from './definitionLogic'
import type { Definition, EventDefinition, PropertyDefinition, PropertyDefinitionType, PropertyType, UserBasicType } from '../../../types'
import type { DeepPartial, DeepPartialMap, FieldName, ValidationErrorType } from '../../../../../node_modules/kea-forms'

export interface definitionEditLogicType extends Logic {
    actionCreators: {
        setDefinition: (
            definition: Partial<Definition>,
            options?: SetDefinitionProps
        ) => {
            type: 'set definition (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                definition: Partial<Definition>
                options: SetDefinitionProps
            }
        }
        setPageMode: (mode: DefinitionPageMode) => {
            type: 'set page mode (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                mode: DefinitionPageMode
            }
        }
        setLocalPropertyDefinition: (definition: PropertyDefinition) => {
            type: 'set local property definition (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                definition: PropertyDefinition
            }
        }
        setLocalEventDefinition: (definition: EventDefinition) => {
            type: 'set local event definition (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                definition: EventDefinition
            }
        }
        loadTags: () => {
            type: 'load tags (scenes.data-management.definition.definitionDetailLogic)'
            payload: any
        }
        setDefinitionValue: (
            key: FieldName,
            value: any
        ) => {
            type: 'set definition value (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                name: FieldName
                value: any
            }
        }
        setDefinitionValues: (values: DeepPartial<Definition>) => {
            type: 'set definition values (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                values: DeepPartial<Definition>
            }
        }
        setDefinitionManualErrors: (errors: Record<string, any>) => {
            type: 'set definition manual errors (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                errors: Record<string, any>
            }
        }
        touchDefinitionField: (key: string) => {
            type: 'touch definition field (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                key: string
            }
        }
        resetDefinition: (values?: Definition) => {
            type: 'reset definition (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                values?: Definition
            }
        }
        submitDefinition: () => {
            type: 'submit definition (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                value: boolean
            }
        }
        submitDefinitionRequest: (definition: Definition) => {
            type: 'submit definition request (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                definition: Definition
            }
        }
        submitDefinitionSuccess: (definition: Definition) => {
            type: 'submit definition success (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                definition: Definition
            }
        }
        submitDefinitionFailure: (
            error: Error,
            errors: Record<string, any>
        ) => {
            type: 'submit definition failure (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                error: Error
                errors: Record<string, any>
            }
        }
        saveDefinition: (_: any) => {
            type: 'save definition (scenes.data-management.definition.definitionDetailLogic)'
            payload: any
        }
        saveDefinitionSuccess: (
            definition:
                | {
                      id: string
                      name: string
                      description?: string | undefined
                      tags?: string[] | undefined
                      owner?: UserBasicType | null | undefined
                      created_at?: string | undefined
                      last_seen_at?: string | undefined
                      last_updated_at?: string | undefined
                      updated_at?: string | undefined
                      updated_by?: UserBasicType | null | undefined
                      verified?: boolean | undefined
                      verified_at?: string | undefined
                      verified_by?: string | undefined
                      is_action?: boolean | undefined
                  }
                | {
                      id: string
                      name: string
                      description?: string | undefined
                      tags?: string[] | undefined
                      updated_at?: string | undefined
                      updated_by?: UserBasicType | null | undefined
                      is_numerical?: boolean | undefined
                      is_seen_on_filtered_events?: boolean | undefined
                      property_type?: PropertyType | undefined
                      type?: PropertyDefinitionType | undefined
                      created_at?: string | undefined
                      last_seen_at?: string | undefined
                      example?: string | undefined
                      is_action?: boolean | undefined
                      verified?: boolean | undefined
                      verified_at?: string | undefined
                      verified_by?: string | undefined
                  },
            payload?: any
        ) => {
            type: 'save definition success (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                definition:
                    | {
                          id: string
                          name: string
                          description?: string | undefined
                          tags?: string[] | undefined
                          owner?: UserBasicType | null | undefined
                          created_at?: string | undefined
                          last_seen_at?: string | undefined
                          last_updated_at?: string | undefined
                          updated_at?: string | undefined
                          updated_by?: UserBasicType | null | undefined
                          verified?: boolean | undefined
                          verified_at?: string | undefined
                          verified_by?: string | undefined
                          is_action?: boolean | undefined
                      }
                    | {
                          id: string
                          name: string
                          description?: string | undefined
                          tags?: string[] | undefined
                          updated_at?: string | undefined
                          updated_by?: UserBasicType | null | undefined
                          is_numerical?: boolean | undefined
                          is_seen_on_filtered_events?: boolean | undefined
                          property_type?: PropertyType | undefined
                          type?: PropertyDefinitionType | undefined
                          created_at?: string | undefined
                          last_seen_at?: string | undefined
                          example?: string | undefined
                          is_action?: boolean | undefined
                          verified?: boolean | undefined
                          verified_at?: string | undefined
                          verified_by?: string | undefined
                      }
                payload?: any
            }
        }
        saveDefinitionFailure: (
            error: string,
            errorObject?: any
        ) => {
            type: 'save definition failure (scenes.data-management.definition.definitionDetailLogic)'
            payload: {
                error: string
                errorObject?: any
            }
        }
    }
    actionKeys: {
        'set definition (scenes.data-management.definition.definitionDetailLogic)': 'setDefinition'
        'set page mode (scenes.data-management.definition.definitionDetailLogic)': 'setPageMode'
        'set local property definition (scenes.data-management.definition.definitionDetailLogic)': 'setLocalPropertyDefinition'
        'set local event definition (scenes.data-management.definition.definitionDetailLogic)': 'setLocalEventDefinition'
        'load tags (scenes.data-management.definition.definitionDetailLogic)': 'loadTags'
        'set definition value (scenes.data-management.definition.definitionDetailLogic)': 'setDefinitionValue'
        'set definition values (scenes.data-management.definition.definitionDetailLogic)': 'setDefinitionValues'
        'set definition manual errors (scenes.data-management.definition.definitionDetailLogic)': 'setDefinitionManualErrors'
        'touch definition field (scenes.data-management.definition.definitionDetailLogic)': 'touchDefinitionField'
        'reset definition (scenes.data-management.definition.definitionDetailLogic)': 'resetDefinition'
        'submit definition (scenes.data-management.definition.definitionDetailLogic)': 'submitDefinition'
        'submit definition request (scenes.data-management.definition.definitionDetailLogic)': 'submitDefinitionRequest'
        'submit definition success (scenes.data-management.definition.definitionDetailLogic)': 'submitDefinitionSuccess'
        'submit definition failure (scenes.data-management.definition.definitionDetailLogic)': 'submitDefinitionFailure'
        'save definition (scenes.data-management.definition.definitionDetailLogic)': 'saveDefinition'
        'save definition success (scenes.data-management.definition.definitionDetailLogic)': 'saveDefinitionSuccess'
        'save definition failure (scenes.data-management.definition.definitionDetailLogic)': 'saveDefinitionFailure'
    }
    actionTypes: {
        setDefinition: 'set definition (scenes.data-management.definition.definitionDetailLogic)'
        setPageMode: 'set page mode (scenes.data-management.definition.definitionDetailLogic)'
        setLocalPropertyDefinition: 'set local property definition (scenes.data-management.definition.definitionDetailLogic)'
        setLocalEventDefinition: 'set local event definition (scenes.data-management.definition.definitionDetailLogic)'
        loadTags: 'load tags (scenes.data-management.definition.definitionDetailLogic)'
        setDefinitionValue: 'set definition value (scenes.data-management.definition.definitionDetailLogic)'
        setDefinitionValues: 'set definition values (scenes.data-management.definition.definitionDetailLogic)'
        setDefinitionManualErrors: 'set definition manual errors (scenes.data-management.definition.definitionDetailLogic)'
        touchDefinitionField: 'touch definition field (scenes.data-management.definition.definitionDetailLogic)'
        resetDefinition: 'reset definition (scenes.data-management.definition.definitionDetailLogic)'
        submitDefinition: 'submit definition (scenes.data-management.definition.definitionDetailLogic)'
        submitDefinitionRequest: 'submit definition request (scenes.data-management.definition.definitionDetailLogic)'
        submitDefinitionSuccess: 'submit definition success (scenes.data-management.definition.definitionDetailLogic)'
        submitDefinitionFailure: 'submit definition failure (scenes.data-management.definition.definitionDetailLogic)'
        saveDefinition: 'save definition (scenes.data-management.definition.definitionDetailLogic)'
        saveDefinitionSuccess: 'save definition success (scenes.data-management.definition.definitionDetailLogic)'
        saveDefinitionFailure: 'save definition failure (scenes.data-management.definition.definitionDetailLogic)'
    }
    actions: {
        setDefinition: (definition: Partial<Definition>, options?: SetDefinitionProps) => void
        setPageMode: (mode: DefinitionPageMode) => void
        setLocalPropertyDefinition: (definition: PropertyDefinition) => void
        setLocalEventDefinition: (definition: EventDefinition) => void
        loadTags: () => void
        setDefinitionValue: (key: FieldName, value: any) => void
        setDefinitionValues: (values: DeepPartial<Definition>) => void
        setDefinitionManualErrors: (errors: Record<string, any>) => void
        touchDefinitionField: (key: string) => void
        resetDefinition: (values?: Definition) => void
        submitDefinition: () => void
        submitDefinitionRequest: (definition: Definition) => void
        submitDefinitionSuccess: (definition: Definition) => void
        submitDefinitionFailure: (error: Error, errors: Record<string, any>) => void
        saveDefinition: (_: any) => void
        saveDefinitionSuccess: (
            definition:
                | {
                      id: string
                      name: string
                      description?: string | undefined
                      tags?: string[] | undefined
                      owner?: UserBasicType | null | undefined
                      created_at?: string | undefined
                      last_seen_at?: string | undefined
                      last_updated_at?: string | undefined
                      updated_at?: string | undefined
                      updated_by?: UserBasicType | null | undefined
                      verified?: boolean | undefined
                      verified_at?: string | undefined
                      verified_by?: string | undefined
                      is_action?: boolean | undefined
                  }
                | {
                      id: string
                      name: string
                      description?: string | undefined
                      tags?: string[] | undefined
                      updated_at?: string | undefined
                      updated_by?: UserBasicType | null | undefined
                      is_numerical?: boolean | undefined
                      is_seen_on_filtered_events?: boolean | undefined
                      property_type?: PropertyType | undefined
                      type?: PropertyDefinitionType | undefined
                      created_at?: string | undefined
                      last_seen_at?: string | undefined
                      example?: string | undefined
                      is_action?: boolean | undefined
                      verified?: boolean | undefined
                      verified_at?: string | undefined
                      verified_by?: string | undefined
                  },
            payload?: any
        ) => void
        saveDefinitionFailure: (error: string, errorObject?: any) => void
    }
    asyncActions: {
        setDefinition: (definition: Partial<Definition>, options?: SetDefinitionProps) => Promise<any>
        setPageMode: (mode: DefinitionPageMode) => Promise<any>
        setLocalPropertyDefinition: (definition: PropertyDefinition) => Promise<any>
        setLocalEventDefinition: (definition: EventDefinition) => Promise<any>
        loadTags: () => Promise<any>
        setDefinitionValue: (key: FieldName, value: any) => Promise<any>
        setDefinitionValues: (values: DeepPartial<Definition>) => Promise<any>
        setDefinitionManualErrors: (errors: Record<string, any>) => Promise<any>
        touchDefinitionField: (key: string) => Promise<any>
        resetDefinition: (values?: Definition) => Promise<any>
        submitDefinition: () => Promise<any>
        submitDefinitionRequest: (definition: Definition) => Promise<any>
        submitDefinitionSuccess: (definition: Definition) => Promise<any>
        submitDefinitionFailure: (error: Error, errors: Record<string, any>) => Promise<any>
        saveDefinition: (_: any) => Promise<any>
        saveDefinitionSuccess: (
            definition:
                | {
                      id: string
                      name: string
                      description?: string | undefined
                      tags?: string[] | undefined
                      owner?: UserBasicType | null | undefined
                      created_at?: string | undefined
                      last_seen_at?: string | undefined
                      last_updated_at?: string | undefined
                      updated_at?: string | undefined
                      updated_by?: UserBasicType | null | undefined
                      verified?: boolean | undefined
                      verified_at?: string | undefined
                      verified_by?: string | undefined
                      is_action?: boolean | undefined
                  }
                | {
                      id: string
                      name: string
                      description?: string | undefined
                      tags?: string[] | undefined
                      updated_at?: string | undefined
                      updated_by?: UserBasicType | null | undefined
                      is_numerical?: boolean | undefined
                      is_seen_on_filtered_events?: boolean | undefined
                      property_type?: PropertyType | undefined
                      type?: PropertyDefinitionType | undefined
                      created_at?: string | undefined
                      last_seen_at?: string | undefined
                      example?: string | undefined
                      is_action?: boolean | undefined
                      verified?: boolean | undefined
                      verified_at?: string | undefined
                      verified_by?: string | undefined
                  },
            payload?: any
        ) => Promise<any>
        saveDefinitionFailure: (error: string, errorObject?: any) => Promise<any>
    }
    defaults: {
        definition: Definition
        isDefinitionSubmitting: boolean
        showDefinitionErrors: boolean
        definitionChanged: boolean
        definitionTouches: Record<string, boolean>
        definitionManualErrors: Record<string, any>
        definitionLoading: boolean
    }
    events: {}
    key: string
    listeners: {}
    path: ['scenes', 'data-management', 'definition', 'definitionDetailLogic']
    pathString: 'scenes.data-management.definition.definitionDetailLogic'
    props: DefinitionEditLogicProps
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        definition: Definition
        isDefinitionSubmitting: boolean
        showDefinitionErrors: boolean
        definitionChanged: boolean
        definitionTouches: Record<string, boolean>
        definitionManualErrors: Record<string, any>
        definitionLoading: boolean
    }
    reducers: {
        definition: (state: Definition, action: any, fullState: any) => Definition
        isDefinitionSubmitting: (state: boolean, action: any, fullState: any) => boolean
        showDefinitionErrors: (state: boolean, action: any, fullState: any) => boolean
        definitionChanged: (state: boolean, action: any, fullState: any) => boolean
        definitionTouches: (state: Record<string, boolean>, action: any, fullState: any) => Record<string, boolean>
        definitionManualErrors: (state: Record<string, any>, action: any, fullState: any) => Record<string, any>
        definitionLoading: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        definition: Definition
        isDefinitionSubmitting: boolean
        showDefinitionErrors: boolean
        definitionChanged: boolean
        definitionTouches: Record<string, boolean>
        definitionManualErrors: Record<string, any>
        definitionLoading: boolean
    }
    selectors: {
        definition: (state: any, props?: any) => Definition
        isDefinitionSubmitting: (state: any, props?: any) => boolean
        showDefinitionErrors: (state: any, props?: any) => boolean
        definitionChanged: (state: any, props?: any) => boolean
        definitionTouches: (state: any, props?: any) => Record<string, boolean>
        definitionManualErrors: (state: any, props?: any) => Record<string, any>
        definitionLoading: (state: any, props?: any) => boolean
        mode: (state: any, props?: any) => DefinitionPageMode
        hasTaxonomyFeatures: (state: any, props?: any) => boolean
        isEvent: (state: any, props?: any) => boolean
        isProperty: (state: any, props?: any) => boolean
        singular: (state: any, props?: any) => string
        definitionTouched: (state: any, props?: any) => boolean
        definitionValidationErrors: (state: any, props?: any) => DeepPartialMap<Definition, ValidationErrorType>
        definitionAllErrors: (state: any, props?: any) => Record<string, any>
        definitionHasErrors: (state: any, props?: any) => boolean
        definitionErrors: (state: any, props?: any) => DeepPartialMap<Definition, ValidationErrorType>
        isDefinitionValid: (state: any, props?: any) => boolean
    }
    sharedListeners: {}
    values: {
        definition: Definition
        isDefinitionSubmitting: boolean
        showDefinitionErrors: boolean
        definitionChanged: boolean
        definitionTouches: Record<string, boolean>
        definitionManualErrors: Record<string, any>
        definitionLoading: boolean
        mode: DefinitionPageMode
        hasTaxonomyFeatures: boolean
        isEvent: boolean
        isProperty: boolean
        singular: string
        definitionTouched: boolean
        definitionValidationErrors: DeepPartialMap<Definition, ValidationErrorType>
        definitionAllErrors: Record<string, any>
        definitionHasErrors: boolean
        definitionErrors: DeepPartialMap<Definition, ValidationErrorType>
        isDefinitionValid: boolean
    }
    _isKea: true
    _isKeaWithKey: true
}
