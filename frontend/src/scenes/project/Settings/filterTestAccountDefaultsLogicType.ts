// Generated by kea-typegen on Thu, 20 Jul 2023 11:19:45 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { TeamPublicType, TeamType } from '../../../types'

export interface filterTestAccountsDefaultsLogicType extends Logic {
    actionCreators: {
        setDefault: (value: boolean) => {
            type: 'set default (scenes.project.Settings.filterTestAccountsDefaultLogic)'
            payload: {
                value: boolean
            }
        }
        setTeamDefault: (value: boolean) => {
            type: 'set team default (scenes.project.Settings.filterTestAccountsDefaultLogic)'
            payload: {
                value: boolean
            }
        }
        setLocalDefault: (value: boolean) => {
            type: 'set local default (scenes.project.Settings.filterTestAccountsDefaultLogic)'
            payload: {
                value: boolean
            }
        }
    }
    actionKeys: {
        'set default (scenes.project.Settings.filterTestAccountsDefaultLogic)': 'setDefault'
        'set team default (scenes.project.Settings.filterTestAccountsDefaultLogic)': 'setTeamDefault'
        'set local default (scenes.project.Settings.filterTestAccountsDefaultLogic)': 'setLocalDefault'
    }
    actionTypes: {
        setDefault: 'set default (scenes.project.Settings.filterTestAccountsDefaultLogic)'
        setTeamDefault: 'set team default (scenes.project.Settings.filterTestAccountsDefaultLogic)'
        setLocalDefault: 'set local default (scenes.project.Settings.filterTestAccountsDefaultLogic)'
    }
    actions: {
        setDefault: (value: boolean) => void
        setTeamDefault: (value: boolean) => void
        setLocalDefault: (value: boolean) => void
    }
    asyncActions: {
        setDefault: (value: boolean) => Promise<any>
        setTeamDefault: (value: boolean) => Promise<any>
        setLocalDefault: (value: boolean) => Promise<any>
    }
    defaults: {
        localFilterTestAccountsDefault: null | boolean
    }
    events: {
        afterMount: () => void
    }
    key: undefined
    listeners: {
        setTeamDefault: ((
            action: {
                type: 'set team default (scenes.project.Settings.filterTestAccountsDefaultLogic)'
                payload: {
                    value: boolean
                }
            },
            previousState: any
        ) => void | Promise<void>)[]
        setLocalDefault: ((
            action: {
                type: 'set local default (scenes.project.Settings.filterTestAccountsDefaultLogic)'
                payload: {
                    value: boolean
                }
            },
            previousState: any
        ) => void | Promise<void>)[]
    }
    path: ['scenes', 'project', 'Settings', 'filterTestAccountsDefaultLogic']
    pathString: 'scenes.project.Settings.filterTestAccountsDefaultLogic'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        localFilterTestAccountsDefault: null | boolean
    }
    reducers: {
        localFilterTestAccountsDefault: (state: null | boolean, action: any, fullState: any) => null | boolean
    }
    selector: (state: any) => {
        localFilterTestAccountsDefault: null | boolean
    }
    selectors: {
        localFilterTestAccountsDefault: (state: any, props?: any) => null | boolean
        currentTeam: (state: any, props?: any) => TeamType | TeamPublicType | null
        filterTestAccountsDefault: (state: any, props?: any) => boolean
    }
    sharedListeners: {}
    values: {
        localFilterTestAccountsDefault: null | boolean
        currentTeam: TeamType | TeamPublicType | null
        filterTestAccountsDefault: boolean
    }
    _isKea: true
    _isKeaWithKey: false
    __keaTypeGenInternalSelectorTypes: {
        filterTestAccountsDefault: (
            localFilterTestAccountsDefault: boolean | null,
            currentTeam:
                | import('/Users/arunchaitanya/Desktop/open-source/posthog-forked/posthog/frontend/src/types').TeamType
                | import('/Users/arunchaitanya/Desktop/open-source/posthog-forked/posthog/frontend/src/types').TeamPublicType
                | null
        ) => boolean
    }
}
