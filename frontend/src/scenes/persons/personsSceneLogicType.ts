// Generated by kea-typegen on Thu, 20 Jul 2023 10:56:43 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { Node } from '../../queries/schema'

export interface personsSceneLogicType extends Logic {
    actionCreators: {
        setQuery: (query: Node) => {
            type: 'set query (scenes.persons.personsSceneLogic)'
            payload: {
                query: Node
            }
        }
    }
    actionKeys: {
        'set query (scenes.persons.personsSceneLogic)': 'setQuery'
    }
    actionTypes: {
        setQuery: 'set query (scenes.persons.personsSceneLogic)'
    }
    actions: {
        setQuery: (query: Node) => void
    }
    asyncActions: {
        setQuery: (query: Node) => Promise<any>
    }
    defaults: {
        query: Node
    }
    events: {}
    key: undefined
    listeners: {}
    path: ['scenes', 'persons', 'personsSceneLogic']
    pathString: 'scenes.persons.personsSceneLogic'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        query: Node
    }
    reducers: {
        query: (state: Node, action: any, fullState: any) => Node
    }
    selector: (state: any) => {
        query: Node
    }
    selectors: {
        query: (state: any, props?: any) => Node
    }
    sharedListeners: {}
    values: {
        query: Node
    }
    _isKea: true
    _isKeaWithKey: false
}
