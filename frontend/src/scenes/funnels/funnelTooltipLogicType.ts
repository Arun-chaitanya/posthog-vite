// Generated by kea-typegen on Thu, 20 Jul 2023 10:55:51 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { FunnelStepWithConversionMetrics, InsightLogicProps } from '../../types'

export interface funnelTooltipLogicType extends Logic {
    actionCreators: {
        showTooltip: (
            origin: [number, number, number],
            stepIndex: number,
            series: FunnelStepWithConversionMetrics
        ) => {
            type: 'show tooltip (scenes.funnels.funnelTooltipLogic.*)'
            payload: {
                origin: [number, number, number]
                stepIndex: number
                series: FunnelStepWithConversionMetrics
            }
        }
        hideTooltip: () => {
            type: 'hide tooltip (scenes.funnels.funnelTooltipLogic.*)'
            payload: {
                value: true
            }
        }
    }
    actionKeys: {
        'show tooltip (scenes.funnels.funnelTooltipLogic.*)': 'showTooltip'
        'hide tooltip (scenes.funnels.funnelTooltipLogic.*)': 'hideTooltip'
    }
    actionTypes: {
        showTooltip: 'show tooltip (scenes.funnels.funnelTooltipLogic.*)'
        hideTooltip: 'hide tooltip (scenes.funnels.funnelTooltipLogic.*)'
    }
    actions: {
        showTooltip: (
            origin: [number, number, number],
            stepIndex: number,
            series: FunnelStepWithConversionMetrics
        ) => void
        hideTooltip: () => void
    }
    asyncActions: {
        showTooltip: (
            origin: [number, number, number],
            stepIndex: number,
            series: FunnelStepWithConversionMetrics
        ) => Promise<any>
        hideTooltip: () => Promise<any>
    }
    defaults: {
        isTooltipShown: boolean
        currentTooltip: [number, FunnelStepWithConversionMetrics] | null
        tooltipOrigin: [number, number, number] | null
    }
    events: {}
    key: string
    listeners: {}
    path: ['scenes', 'funnels', 'funnelTooltipLogic', '*']
    pathString: 'scenes.funnels.funnelTooltipLogic.*'
    props: InsightLogicProps
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        isTooltipShown: boolean
        currentTooltip: [number, FunnelStepWithConversionMetrics] | null
        tooltipOrigin: [number, number, number] | null
    }
    reducers: {
        isTooltipShown: (state: boolean, action: any, fullState: any) => boolean
        currentTooltip: (
            state: [number, FunnelStepWithConversionMetrics] | null,
            action: any,
            fullState: any
        ) => [number, FunnelStepWithConversionMetrics] | null
        tooltipOrigin: (
            state: [number, number, number] | null,
            action: any,
            fullState: any
        ) => [number, number, number] | null
    }
    selector: (state: any) => {
        isTooltipShown: boolean
        currentTooltip: [number, FunnelStepWithConversionMetrics] | null
        tooltipOrigin: [number, number, number] | null
    }
    selectors: {
        isTooltipShown: (state: any, props?: any) => boolean
        currentTooltip: (state: any, props?: any) => [number, FunnelStepWithConversionMetrics] | null
        tooltipOrigin: (state: any, props?: any) => [number, number, number] | null
    }
    sharedListeners: {}
    values: {
        isTooltipShown: boolean
        currentTooltip: [number, FunnelStepWithConversionMetrics] | null
        tooltipOrigin: [number, number, number] | null
    }
    _isKea: true
    _isKeaWithKey: true
}
