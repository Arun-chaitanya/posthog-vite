// Generated by kea-typegen on Thu, 20 Jul 2023 10:57:23 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

export interface feedbackLogicType extends Logic {
    actionCreators: {
        setActiveTab: (activeTab: string) => {
            type: 'set active tab (scenes.feedback.feedbackLogic)'
            payload: {
                activeTab: string
            }
        }
    }
    actionKeys: {
        'set active tab (scenes.feedback.feedbackLogic)': 'setActiveTab'
    }
    actionTypes: {
        setActiveTab: 'set active tab (scenes.feedback.feedbackLogic)'
    }
    actions: {
        setActiveTab: (activeTab: string) => void
    }
    asyncActions: {
        setActiveTab: (activeTab: string) => Promise<any>
    }
    defaults: {
        activeTab: string
    }
    events: {}
    key: undefined
    listeners: {}
    path: ['scenes', 'feedback', 'feedbackLogic']
    pathString: 'scenes.feedback.feedbackLogic'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        activeTab: string
    }
    reducers: {
        activeTab: (state: string, action: any, fullState: any) => string
    }
    selector: (state: any) => {
        activeTab: string
    }
    selectors: {
        activeTab: (state: any, props?: any) => string
    }
    sharedListeners: {}
    values: {
        activeTab: string
    }
    _isKea: true
    _isKeaWithKey: false
}
