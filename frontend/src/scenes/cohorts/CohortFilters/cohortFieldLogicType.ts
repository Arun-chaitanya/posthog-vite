// Generated by kea-typegen on Thu, 20 Jul 2023 11:26:39 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { CohortFieldLogicProps } from './cohortFieldLogic'
import type { AnyCohortCriteriaType, AvailableFeature, GroupType } from '../../../types'
import type { Noun } from '../../../models/groupsModel'
import type { FieldValues } from './types'
import type { TaxonomicFilterGroupType } from '../../../lib/components/TaxonomicFilter/types'

export interface cohortFieldLogicType extends Logic {
    actionCreators: {
        onChange: (newField: AnyCohortCriteriaType) => {
            type: 'on change (scenes.cohorts.CohortFilters.cohortFieldLogic)'
            payload: {
                newField: AnyCohortCriteriaType
            }
        }
    }
    actionKeys: {
        'on change (scenes.cohorts.CohortFilters.cohortFieldLogic)': 'onChange'
    }
    actionTypes: {
        onChange: 'on change (scenes.cohorts.CohortFilters.cohortFieldLogic)'
    }
    actions: {
        onChange: (newField: AnyCohortCriteriaType) => void
    }
    asyncActions: {
        onChange: (newField: AnyCohortCriteriaType) => Promise<any>
    }
    defaults: {
        value: string | number | boolean | null | undefined
    }
    events: {}
    key: string
    listeners: {
        onChange: ((
            action: {
                type: 'on change (scenes.cohorts.CohortFilters.cohortFieldLogic)'
                payload: {
                    newField: AnyCohortCriteriaType
                }
            },
            previousState: any
        ) => void | Promise<void>)[]
    }
    path: ['scenes', 'cohorts', 'CohortFilters', 'cohortFieldLogic']
    pathString: 'scenes.cohorts.CohortFilters.cohortFieldLogic'
    props: CohortFieldLogicProps
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        value: string | number | boolean | null | undefined
    }
    reducers: {
        value: (
            state: string | number | boolean | null | undefined,
            action: any,
            fullState: any
        ) => string | number | boolean | null | undefined
    }
    selector: (state: any) => {
        value: string | number | boolean | null | undefined
    }
    selectors: {
        value: (state: any, props?: any) => string | number | boolean | null | undefined
        groupTypes: (state: any, props?: any) => Array<GroupType>
        aggregationLabel: (
            state: any,
            props?: any
        ) => (groupTypeIndex: number | null | undefined, deferToUserWording?: boolean) => Noun
        hasAvailableFeature: (
            state: any,
            props?: any
        ) => (feature: AvailableFeature, currentUsage?: number | undefined) => boolean
        hasBehavioralCohortFiltering: (state: any, props?: any) => boolean
        fieldOptionGroups: (state: any, props?: any) => FieldValues[]
        currentOption: (state: any, props?: any) => any
        calculatedValueLoading: (state: any, props?: any) => (taxonomicGroupType: TaxonomicFilterGroupType) => boolean
        calculatedValue: (
            state: any,
            props?: any
        ) => (taxonomicGroupType: TaxonomicFilterGroupType) => string | number | boolean | null | undefined
    }
    sharedListeners: {}
    values: {
        value: string | number | boolean | null | undefined
        groupTypes: Array<GroupType>
        aggregationLabel: (groupTypeIndex: number | null | undefined, deferToUserWording?: boolean) => Noun
        hasAvailableFeature: (feature: AvailableFeature, currentUsage?: number | undefined) => boolean
        hasBehavioralCohortFiltering: boolean
        fieldOptionGroups: FieldValues[]
        currentOption: any
        calculatedValueLoading: (taxonomicGroupType: TaxonomicFilterGroupType) => boolean
        calculatedValue: (taxonomicGroupType: TaxonomicFilterGroupType) => string | number | boolean | null | undefined
    }
    _isKea: true
    _isKeaWithKey: true
    __keaTypeGenInternalSelectorTypes: {
        hasBehavioralCohortFiltering: (
            hasAvailableFeature: (feature: AvailableFeature, currentUsage?: number | undefined) => boolean
        ) => boolean
        fieldOptionGroups: (
            arg: any,
            groupTypes: import('/Users/arunchaitanya/Desktop/open-source/posthog-forked/posthog/frontend/src/types').GroupType[],
            aggregationLabel: (
                groupTypeIndex: number | null | undefined,
                deferToUserWording?: boolean | undefined
            ) => import('/Users/arunchaitanya/Desktop/open-source/posthog-forked/posthog/frontend/src/models/groupsModel').Noun,
            hasBehavioralCohortFiltering: boolean
        ) => FieldValues[]
        currentOption: (fieldOptionGroups: FieldValues[], value: string | number | boolean | null | undefined) => any
        calculatedValueLoading: (
            value: string | number | boolean | null | undefined,
            arg: any,
            arg2: any,
            cohortsLoading: boolean,
            actionsLoading: boolean
        ) => (taxonomicGroupType: TaxonomicFilterGroupType) => boolean
        calculatedValue: (
            value: string | number | boolean | null | undefined,
            arg: any,
            arg2: any,
            cohortsLoading: boolean,
            actionsLoading: boolean
        ) => (taxonomicGroupType: TaxonomicFilterGroupType) => string | number | boolean | null | undefined
    }
}
