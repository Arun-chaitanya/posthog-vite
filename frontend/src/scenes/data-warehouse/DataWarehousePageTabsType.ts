// Generated by kea-typegen on Sun, 06 Aug 2023 06:33:25 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { DataWarehouseTab } from './DataWarehousePageTabs'

export interface dataWarehouseTabsLogicType extends Logic {
    actionCreators: {
        setTab: (tab: DataWarehouseTab) => {
            type: 'set tab (scenes.warehouse.dataWarehouseTabsLogic)'
            payload: {
                tab: DataWarehouseTab
            }
        }
    }
    actionKeys: {
        'set tab (scenes.warehouse.dataWarehouseTabsLogic)': 'setTab'
    }
    actionTypes: {
        setTab: 'set tab (scenes.warehouse.dataWarehouseTabsLogic)'
    }
    actions: {
        setTab: (tab: DataWarehouseTab) => void
    }
    asyncActions: {
        setTab: (tab: DataWarehouseTab) => Promise<any>
    }
    defaults: {
        tab: DataWarehouseTab
    }
    events: {}
    key: undefined
    listeners: {}
    path: ['scenes', 'warehouse', 'dataWarehouseTabsLogic']
    pathString: 'scenes.warehouse.dataWarehouseTabsLogic'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        tab: DataWarehouseTab
    }
    reducers: {
        tab: (state: DataWarehouseTab, action: any, fullState: any) => DataWarehouseTab
    }
    selector: (state: any) => {
        tab: DataWarehouseTab
    }
    selectors: {
        tab: (state: any, props?: any) => DataWarehouseTab
    }
    sharedListeners: {}
    values: {
        tab: DataWarehouseTab
    }
    _isKea: true
    _isKeaWithKey: false
}
