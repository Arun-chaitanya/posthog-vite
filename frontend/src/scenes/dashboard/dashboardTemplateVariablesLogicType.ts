// Generated by kea-typegen on Thu, 20 Jul 2023 10:56:10 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { DashboardTemplateVariablesLogicProps } from './dashboardTemplateVariablesLogic'
import type { DashboardTemplateVariableType, FilterType, Optional } from '../../types'

export interface dashboardTemplateVariablesLogicType extends Logic {
    actionCreators: {
        setVariables: (variables: DashboardTemplateVariableType[]) => {
            type: 'set variables (scenes.dashboard.DashboardTemplateVariablesLogic)'
            payload: {
                variables: DashboardTemplateVariableType[]
            }
        }
        setVariable: (
            variableName: string,
            filterGroup: Optional<FilterType, 'type'>
        ) => {
            type: 'set variable (scenes.dashboard.DashboardTemplateVariablesLogic)'
            payload: {
                variable_name: string
                filterGroup: Optional<FilterType, 'type'>
            }
        }
    }
    actionKeys: {
        'set variables (scenes.dashboard.DashboardTemplateVariablesLogic)': 'setVariables'
        'set variable (scenes.dashboard.DashboardTemplateVariablesLogic)': 'setVariable'
    }
    actionTypes: {
        setVariables: 'set variables (scenes.dashboard.DashboardTemplateVariablesLogic)'
        setVariable: 'set variable (scenes.dashboard.DashboardTemplateVariablesLogic)'
    }
    actions: {
        setVariables: (variables: DashboardTemplateVariableType[]) => void
        setVariable: (variableName: string, filterGroup: Optional<FilterType, 'type'>) => void
    }
    asyncActions: {
        setVariables: (variables: DashboardTemplateVariableType[]) => Promise<any>
        setVariable: (variableName: string, filterGroup: Optional<FilterType, 'type'>) => Promise<any>
    }
    defaults: {
        variables: DashboardTemplateVariableType[]
    }
    events: {}
    key: undefined
    listeners: {}
    path: ['scenes', 'dashboard', 'DashboardTemplateVariablesLogic']
    pathString: 'scenes.dashboard.DashboardTemplateVariablesLogic'
    props: DashboardTemplateVariablesLogicProps
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        variables: DashboardTemplateVariableType[]
    }
    reducers: {
        variables: (
            state: DashboardTemplateVariableType[],
            action: any,
            fullState: any
        ) => DashboardTemplateVariableType[]
    }
    selector: (state: any) => {
        variables: DashboardTemplateVariableType[]
    }
    selectors: {
        variables: (state: any, props?: any) => DashboardTemplateVariableType[]
    }
    sharedListeners: {}
    values: {
        variables: DashboardTemplateVariableType[]
    }
    _isKea: true
    _isKeaWithKey: false
}
