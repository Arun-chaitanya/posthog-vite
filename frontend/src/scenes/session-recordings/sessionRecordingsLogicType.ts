// Generated by kea-typegen on Thu, 20 Jul 2023 11:14:21 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { Breadcrumb, ReplayTabs } from '../../types'

export interface sessionRecordingsLogicType extends Logic {
    actionCreators: {
        setTab: (tab?: ReplayTabs) => {
            type: 'set tab (scenes.session-recordings.root)'
            payload: {
                tab: ReplayTabs
            }
        }
    }
    actionKeys: {
        'set tab (scenes.session-recordings.root)': 'setTab'
    }
    actionTypes: {
        setTab: 'set tab (scenes.session-recordings.root)'
    }
    actions: {
        setTab: (tab?: ReplayTabs) => void
    }
    asyncActions: {
        setTab: (tab?: ReplayTabs) => Promise<any>
    }
    defaults: {
        tab: ReplayTabs
    }
    events: {}
    key: undefined
    listeners: {}
    path: ['scenes', 'session-recordings', 'root']
    pathString: 'scenes.session-recordings.root'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        tab: ReplayTabs
    }
    reducers: {
        tab: (state: ReplayTabs, action: any, fullState: any) => ReplayTabs
    }
    selector: (state: any) => {
        tab: ReplayTabs
    }
    selectors: {
        tab: (state: any, props?: any) => ReplayTabs
        breadcrumbs: (state: any, props?: any) => Breadcrumb[]
    }
    sharedListeners: {}
    values: {
        tab: ReplayTabs
        breadcrumbs: Breadcrumb[]
    }
    _isKea: true
    _isKeaWithKey: false
    __keaTypeGenInternalSelectorTypes: {
        breadcrumbs: (tab: ReplayTabs) => Breadcrumb[]
    }
}
