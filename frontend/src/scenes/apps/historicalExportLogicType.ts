// Generated by kea-typegen on Thu, 20 Jul 2023 10:57:13 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { ExportData, HistoricalExportLogicProps } from './historicalExportLogic'

export interface historicalExportLogicType extends Logic {
    actionCreators: {
        loadExportData: () => {
            type: 'load export data (scenes.apps.historicalExportLogic)'
            payload: any
        }
        loadExportDataSuccess: (
            data: ExportData | null,
            payload?: any
        ) => {
            type: 'load export data success (scenes.apps.historicalExportLogic)'
            payload: {
                data: ExportData | null
                payload?: any
            }
        }
        loadExportDataFailure: (
            error: string,
            errorObject?: any
        ) => {
            type: 'load export data failure (scenes.apps.historicalExportLogic)'
            payload: {
                error: string
                errorObject?: any
            }
        }
    }
    actionKeys: {
        'load export data (scenes.apps.historicalExportLogic)': 'loadExportData'
        'load export data success (scenes.apps.historicalExportLogic)': 'loadExportDataSuccess'
        'load export data failure (scenes.apps.historicalExportLogic)': 'loadExportDataFailure'
    }
    actionTypes: {
        loadExportData: 'load export data (scenes.apps.historicalExportLogic)'
        loadExportDataSuccess: 'load export data success (scenes.apps.historicalExportLogic)'
        loadExportDataFailure: 'load export data failure (scenes.apps.historicalExportLogic)'
    }
    actions: {
        loadExportData: () => void
        loadExportDataSuccess: (data: ExportData | null, payload?: any) => void
        loadExportDataFailure: (error: string, errorObject?: any) => void
    }
    asyncActions: {
        loadExportData: () => Promise<any>
        loadExportDataSuccess: (data: ExportData | null, payload?: any) => Promise<any>
        loadExportDataFailure: (error: string, errorObject?: any) => Promise<any>
    }
    defaults: {
        data: ExportData | null
        dataLoading: boolean
    }
    events: {
        afterMount: () => void
    }
    key: string
    listeners: {}
    path: ['scenes', 'apps', 'historicalExportLogic']
    pathString: 'scenes.apps.historicalExportLogic'
    props: HistoricalExportLogicProps
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        data: ExportData | null
        dataLoading: boolean
    }
    reducers: {
        data: (state: ExportData | null, action: any, fullState: any) => ExportData | null
        dataLoading: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        data: ExportData | null
        dataLoading: boolean
    }
    selectors: {
        data: (state: any, props?: any) => ExportData | null
        dataLoading: (state: any, props?: any) => boolean
    }
    sharedListeners: {}
    values: {
        data: ExportData | null
        dataLoading: boolean
    }
    _isKea: true
    _isKeaWithKey: true
}
