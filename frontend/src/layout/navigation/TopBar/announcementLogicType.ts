// Generated by kea-typegen on Thu, 20 Jul 2023 11:26:47 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { FeatureFlagsSet } from '../../../lib/logic/featureFlagLogic'
import type { PreflightStatus, UserType } from '../../../types'
import type { AnnouncementType } from './announcementLogic'

export interface announcementLogicType extends Logic {
    actionCreators: {
        hideAnnouncement: (type: AnnouncementType | null) => {
            type: 'hide announcement (layout.navigation.TopBar.announcementLogic)'
            payload: {
                type: AnnouncementType | null
            }
        }
    }
    actionKeys: {
        'hide announcement (layout.navigation.TopBar.announcementLogic)': 'hideAnnouncement'
    }
    actionTypes: {
        hideAnnouncement: 'hide announcement (layout.navigation.TopBar.announcementLogic)'
    }
    actions: {
        hideAnnouncement: (type: AnnouncementType | null) => void
    }
    asyncActions: {
        hideAnnouncement: (type: AnnouncementType | null) => Promise<any>
    }
    defaults: {
        persistedClosedAnnouncements: Record<AnnouncementType, boolean>
        closed: boolean
    }
    events: {}
    key: undefined
    listeners: {}
    path: ['layout', 'navigation', 'TopBar', 'announcementLogic']
    pathString: 'layout.navigation.TopBar.announcementLogic'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        persistedClosedAnnouncements: Record<AnnouncementType, boolean>
        closed: boolean
    }
    reducers: {
        persistedClosedAnnouncements: (
            state: Record<AnnouncementType, boolean>,
            action: any,
            fullState: any
        ) => Record<AnnouncementType, boolean>
        closed: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        persistedClosedAnnouncements: Record<AnnouncementType, boolean>
        closed: boolean
    }
    selectors: {
        persistedClosedAnnouncements: (state: any, props?: any) => Record<AnnouncementType, boolean>
        closed: (state: any, props?: any) => boolean
        featureFlags: (state: any, props?: any) => FeatureFlagsSet
        preflight: (state: any, props?: any) => PreflightStatus | null
        user: (state: any, props?: any) => UserType | null
        asyncMigrationsOk: (state: any, props?: any) => boolean
        closable: (state: any, props?: any) => boolean
        shownAnnouncementType: (state: any, props?: any) => AnnouncementType | null
        relevantAnnouncementType: (state: any, props?: any) => AnnouncementType | null
        cloudAnnouncement: (state: any, props?: any) => string | null
    }
    sharedListeners: {}
    values: {
        persistedClosedAnnouncements: Record<AnnouncementType, boolean>
        closed: boolean
        featureFlags: FeatureFlagsSet
        preflight: PreflightStatus | null
        user: UserType | null
        asyncMigrationsOk: boolean
        closable: boolean
        shownAnnouncementType: AnnouncementType | null
        relevantAnnouncementType: AnnouncementType | null
        cloudAnnouncement: string | null
    }
    _isKea: true
    _isKeaWithKey: false
    __keaTypeGenInternalSelectorTypes: {
        closable: (relevantAnnouncementType: AnnouncementType | null) => boolean
        shownAnnouncementType: (
            location: {
                pathname: string
                search: string
                hash: string
            },
            relevantAnnouncementType: AnnouncementType | null,
            closable: boolean,
            closed: boolean,
            persistedClosedAnnouncements: Record<AnnouncementType, boolean>
        ) => AnnouncementType | null
        relevantAnnouncementType: (
            cloudAnnouncement: string | null,
            preflight:
                | import('/Users/arunchaitanya/Desktop/open-source/posthog-forked/posthog/frontend/src/types').PreflightStatus
                | null,
            user:
                | import('/Users/arunchaitanya/Desktop/open-source/posthog-forked/posthog/frontend/src/types').UserType
                | null,
            asyncMigrationsOk: boolean
        ) => AnnouncementType | null
        cloudAnnouncement: (
            featureFlags: import('/Users/arunchaitanya/Desktop/open-source/posthog-forked/posthog/frontend/src/lib/logic/featureFlagLogic').FeatureFlagsSet
        ) => string | null
    }
}
