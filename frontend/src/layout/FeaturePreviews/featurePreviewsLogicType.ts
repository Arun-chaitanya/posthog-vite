// Generated by kea-typegen on Sun, 06 Aug 2023 09:53:41 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { FeatureFlagsSet } from '../../lib/logic/featureFlagLogic'
import type { UserType } from '../../types'
import type { EarlyAccessFeature } from '../../../../node_modules/.pnpm/posthog-js@1.75.2/node_modules/posthog-js/dist/module.d'
import type { EnrichedEarlyAccessFeature } from './featurePreviewsLogic'

export interface featurePreviewsLogicType extends Logic {
    actionCreators: {
        showFeaturePreviewsModal: () => {
            type: 'show feature previews modal (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: {
                value: true
            }
        }
        hideFeaturePreviewsModal: () => {
            type: 'hide feature previews modal (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: {
                value: true
            }
        }
        updateEarlyAccessFeatureEnrollment: (
            flagKey: string,
            enabled: boolean
        ) => {
            type: 'update early access feature enrollment (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: {
                flagKey: string
                enabled: boolean
            }
        }
        beginEarlyAccessFeatureFeedback: (flagKey: string) => {
            type: 'begin early access feature feedback (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: {
                flagKey: string
            }
        }
        cancelEarlyAccessFeatureFeedback: () => {
            type: 'cancel early access feature feedback (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: {
                value: true
            }
        }
        submitEarlyAccessFeatureFeedback: (message: string) => {
            type: 'submit early access feature feedback (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: {
                message: string
            }
        }
        loadEarlyAccessFeatures: () => {
            type: 'load early access features (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: any
        }
        loadEarlyAccessFeaturesSuccess: (
            rawEarlyAccessFeatures: EarlyAccessFeature[],
            payload?: any
        ) => {
            type: 'load early access features success (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: {
                rawEarlyAccessFeatures: EarlyAccessFeature[]
                payload?: any
            }
        }
        loadEarlyAccessFeaturesFailure: (
            error: string,
            errorObject?: any
        ) => {
            type: 'load early access features failure (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: {
                error: string
                errorObject?: any
            }
        }
        submitEarlyAccessFeatureFeedbackSuccess: (
            activeFeedbackFlagKey: null,
            payload?: {
                message: string
            }
        ) => {
            type: 'submit early access feature feedback success (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: {
                activeFeedbackFlagKey: null
                payload?: {
                    message: string
                }
            }
        }
        submitEarlyAccessFeatureFeedbackFailure: (
            error: string,
            errorObject?: any
        ) => {
            type: 'submit early access feature feedback failure (layout.navigation.TopBar.FeaturePreviewsModal)'
            payload: {
                error: string
                errorObject?: any
            }
        }
    }
    actionKeys: {
        'show feature previews modal (layout.navigation.TopBar.FeaturePreviewsModal)': 'showFeaturePreviewsModal'
        'hide feature previews modal (layout.navigation.TopBar.FeaturePreviewsModal)': 'hideFeaturePreviewsModal'
        'update early access feature enrollment (layout.navigation.TopBar.FeaturePreviewsModal)': 'updateEarlyAccessFeatureEnrollment'
        'begin early access feature feedback (layout.navigation.TopBar.FeaturePreviewsModal)': 'beginEarlyAccessFeatureFeedback'
        'cancel early access feature feedback (layout.navigation.TopBar.FeaturePreviewsModal)': 'cancelEarlyAccessFeatureFeedback'
        'submit early access feature feedback (layout.navigation.TopBar.FeaturePreviewsModal)': 'submitEarlyAccessFeatureFeedback'
        'load early access features (layout.navigation.TopBar.FeaturePreviewsModal)': 'loadEarlyAccessFeatures'
        'load early access features success (layout.navigation.TopBar.FeaturePreviewsModal)': 'loadEarlyAccessFeaturesSuccess'
        'load early access features failure (layout.navigation.TopBar.FeaturePreviewsModal)': 'loadEarlyAccessFeaturesFailure'
        'submit early access feature feedback success (layout.navigation.TopBar.FeaturePreviewsModal)': 'submitEarlyAccessFeatureFeedbackSuccess'
        'submit early access feature feedback failure (layout.navigation.TopBar.FeaturePreviewsModal)': 'submitEarlyAccessFeatureFeedbackFailure'
    }
    actionTypes: {
        showFeaturePreviewsModal: 'show feature previews modal (layout.navigation.TopBar.FeaturePreviewsModal)'
        hideFeaturePreviewsModal: 'hide feature previews modal (layout.navigation.TopBar.FeaturePreviewsModal)'
        updateEarlyAccessFeatureEnrollment: 'update early access feature enrollment (layout.navigation.TopBar.FeaturePreviewsModal)'
        beginEarlyAccessFeatureFeedback: 'begin early access feature feedback (layout.navigation.TopBar.FeaturePreviewsModal)'
        cancelEarlyAccessFeatureFeedback: 'cancel early access feature feedback (layout.navigation.TopBar.FeaturePreviewsModal)'
        submitEarlyAccessFeatureFeedback: 'submit early access feature feedback (layout.navigation.TopBar.FeaturePreviewsModal)'
        loadEarlyAccessFeatures: 'load early access features (layout.navigation.TopBar.FeaturePreviewsModal)'
        loadEarlyAccessFeaturesSuccess: 'load early access features success (layout.navigation.TopBar.FeaturePreviewsModal)'
        loadEarlyAccessFeaturesFailure: 'load early access features failure (layout.navigation.TopBar.FeaturePreviewsModal)'
        submitEarlyAccessFeatureFeedbackSuccess: 'submit early access feature feedback success (layout.navigation.TopBar.FeaturePreviewsModal)'
        submitEarlyAccessFeatureFeedbackFailure: 'submit early access feature feedback failure (layout.navigation.TopBar.FeaturePreviewsModal)'
    }
    actions: {
        showFeaturePreviewsModal: () => void
        hideFeaturePreviewsModal: () => void
        updateEarlyAccessFeatureEnrollment: (flagKey: string, enabled: boolean) => void
        beginEarlyAccessFeatureFeedback: (flagKey: string) => void
        cancelEarlyAccessFeatureFeedback: () => void
        submitEarlyAccessFeatureFeedback: (message: string) => void
        loadEarlyAccessFeatures: () => void
        loadEarlyAccessFeaturesSuccess: (rawEarlyAccessFeatures: EarlyAccessFeature[], payload?: any) => void
        loadEarlyAccessFeaturesFailure: (error: string, errorObject?: any) => void
        submitEarlyAccessFeatureFeedbackSuccess: (
            activeFeedbackFlagKey: null,
            payload?: {
                message: string
            }
        ) => void
        submitEarlyAccessFeatureFeedbackFailure: (error: string, errorObject?: any) => void
    }
    asyncActions: {
        showFeaturePreviewsModal: () => Promise<any>
        hideFeaturePreviewsModal: () => Promise<any>
        updateEarlyAccessFeatureEnrollment: (flagKey: string, enabled: boolean) => Promise<any>
        beginEarlyAccessFeatureFeedback: (flagKey: string) => Promise<any>
        cancelEarlyAccessFeatureFeedback: () => Promise<any>
        submitEarlyAccessFeatureFeedback: (message: string) => Promise<any>
        loadEarlyAccessFeatures: () => Promise<any>
        loadEarlyAccessFeaturesSuccess: (rawEarlyAccessFeatures: EarlyAccessFeature[], payload?: any) => Promise<any>
        loadEarlyAccessFeaturesFailure: (error: string, errorObject?: any) => Promise<any>
        submitEarlyAccessFeatureFeedbackSuccess: (
            activeFeedbackFlagKey: null,
            payload?: {
                message: string
            }
        ) => Promise<any>
        submitEarlyAccessFeatureFeedbackFailure: (error: string, errorObject?: any) => Promise<any>
    }
    defaults: {
        rawEarlyAccessFeatures: EarlyAccessFeature[]
        rawEarlyAccessFeaturesLoading: boolean
        activeFeedbackFlagKey: string | null
        activeFeedbackFlagKeyLoading: boolean
        featurePreviewsModalVisible: boolean
    }
    events: {}
    key: undefined
    listeners: {
        updateEarlyAccessFeatureEnrollment: ((
            action: {
                type: 'update early access feature enrollment (layout.navigation.TopBar.FeaturePreviewsModal)'
                payload: {
                    flagKey: string
                    enabled: boolean
                }
            },
            previousState: any
        ) => void | Promise<void>)[]
    }
    path: ['layout', 'navigation', 'TopBar', 'FeaturePreviewsModal']
    pathString: 'layout.navigation.TopBar.FeaturePreviewsModal'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        rawEarlyAccessFeatures: EarlyAccessFeature[]
        rawEarlyAccessFeaturesLoading: boolean
        activeFeedbackFlagKey: string | null
        activeFeedbackFlagKeyLoading: boolean
        featurePreviewsModalVisible: boolean
    }
    reducers: {
        rawEarlyAccessFeatures: (state: EarlyAccessFeature[], action: any, fullState: any) => EarlyAccessFeature[]
        rawEarlyAccessFeaturesLoading: (state: boolean, action: any, fullState: any) => boolean
        activeFeedbackFlagKey: (state: string | null, action: any, fullState: any) => string | null
        activeFeedbackFlagKeyLoading: (state: boolean, action: any, fullState: any) => boolean
        featurePreviewsModalVisible: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        rawEarlyAccessFeatures: EarlyAccessFeature[]
        rawEarlyAccessFeaturesLoading: boolean
        activeFeedbackFlagKey: string | null
        activeFeedbackFlagKeyLoading: boolean
        featurePreviewsModalVisible: boolean
    }
    selectors: {
        rawEarlyAccessFeatures: (state: any, props?: any) => EarlyAccessFeature[]
        rawEarlyAccessFeaturesLoading: (state: any, props?: any) => boolean
        activeFeedbackFlagKey: (state: any, props?: any) => string | null
        activeFeedbackFlagKeyLoading: (state: any, props?: any) => boolean
        featurePreviewsModalVisible: (state: any, props?: any) => boolean
        featureFlags: (state: any, props?: any) => FeatureFlagsSet
        user: (state: any, props?: any) => UserType | null
        earlyAccessFeatures: (state: any, props?: any) => EnrichedEarlyAccessFeature[]
    }
    sharedListeners: {}
    values: {
        rawEarlyAccessFeatures: EarlyAccessFeature[]
        rawEarlyAccessFeaturesLoading: boolean
        activeFeedbackFlagKey: string | null
        activeFeedbackFlagKeyLoading: boolean
        featurePreviewsModalVisible: boolean
        featureFlags: FeatureFlagsSet
        user: UserType | null
        earlyAccessFeatures: EnrichedEarlyAccessFeature[]
    }
    _isKea: true
    _isKeaWithKey: false
    __keaTypeGenInternalSelectorTypes: {
        earlyAccessFeatures: (
            rawEarlyAccessFeatures: EarlyAccessFeature[],
            featureFlags: import('/Users/arunchaitanya/Desktop/open-source/posthog-forked/posthog/frontend/src/lib/logic/featureFlagLogic').FeatureFlagsSet
        ) => EnrichedEarlyAccessFeature[]
    }
}
