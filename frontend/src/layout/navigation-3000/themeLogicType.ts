// Generated by kea-typegen on Thu, 20 Jul 2023 11:18:06 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

export interface themeLogicType extends Logic {
    actionCreators: {
        toggleTheme: () => {
            type: 'toggle theme (layout.navigation-3000.themeLogic)'
            payload: {
                value: true
            }
        }
        overrideTheme: (darkModePreference: boolean) => {
            type: 'override theme (layout.navigation-3000.themeLogic)'
            payload: {
                darkModePreference: boolean
            }
        }
        syncDarkModePreference: (darkModePreference: boolean) => {
            type: 'sync dark mode preference (layout.navigation-3000.themeLogic)'
            payload: {
                darkModePreference: boolean
            }
        }
    }
    actionKeys: {
        'toggle theme (layout.navigation-3000.themeLogic)': 'toggleTheme'
        'override theme (layout.navigation-3000.themeLogic)': 'overrideTheme'
        'sync dark mode preference (layout.navigation-3000.themeLogic)': 'syncDarkModePreference'
    }
    actionTypes: {
        toggleTheme: 'toggle theme (layout.navigation-3000.themeLogic)'
        overrideTheme: 'override theme (layout.navigation-3000.themeLogic)'
        syncDarkModePreference: 'sync dark mode preference (layout.navigation-3000.themeLogic)'
    }
    actions: {
        toggleTheme: () => void
        overrideTheme: (darkModePreference: boolean) => void
        syncDarkModePreference: (darkModePreference: boolean) => void
    }
    asyncActions: {
        toggleTheme: () => Promise<any>
        overrideTheme: (darkModePreference: boolean) => Promise<any>
        syncDarkModePreference: (darkModePreference: boolean) => Promise<any>
    }
    defaults: {
        darkModeSavedPreference: boolean | null
        darkModeSystemPreference: boolean
    }
    events: {
        afterMount: () => void
        beforeUnmount: () => void
    }
    key: undefined
    listeners: {}
    path: ['layout', 'navigation-3000', 'themeLogic']
    pathString: 'layout.navigation-3000.themeLogic'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        darkModeSavedPreference: boolean | null
        darkModeSystemPreference: boolean
    }
    reducers: {
        darkModeSavedPreference: (state: boolean | null, action: any, fullState: any) => boolean | null
        darkModeSystemPreference: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        darkModeSavedPreference: boolean | null
        darkModeSystemPreference: boolean
    }
    selectors: {
        darkModeSavedPreference: (state: any, props?: any) => boolean | null
        darkModeSystemPreference: (state: any, props?: any) => boolean
        isDarkModeOn: (state: any, props?: any) => boolean
        isThemeSyncedWithSystem: (state: any, props?: any) => boolean
    }
    sharedListeners: {}
    values: {
        darkModeSavedPreference: boolean | null
        darkModeSystemPreference: boolean
        isDarkModeOn: boolean
        isThemeSyncedWithSystem: boolean
    }
    _isKea: true
    _isKeaWithKey: false
    __keaTypeGenInternalSelectorTypes: {
        isDarkModeOn: (
            darkModeSavedPreference: boolean | null,
            darkModeSystemPreference: boolean,
            featureFlags: import('/Users/arunchaitanya/Desktop/open-source/posthog-forked/posthog/frontend/src/lib/logic/featureFlagLogic').FeatureFlagsSet
        ) => boolean
        isThemeSyncedWithSystem: (darkModeSavedPreference: boolean | null) => boolean
    }
}
